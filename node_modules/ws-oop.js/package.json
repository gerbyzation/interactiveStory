{
  "name": "ws-oop.js",
  "version": "1.0.0",
  "description": "A set of methods that help with object orientated javascript programming.",
  "main": "OOP.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:WillSkates/OOP.js.git"
  },
  "keywords": [
    "Object",
    "Orientated",
    "OOP",
    "Javascript"
  ],
  "author": {
    "name": "Will Skates"
  },
  "email": "itstrue@thisbe.ws",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/WillSkates/OOP.js/issues"
  },
  "homepage": "https://github.com/WillSkates/OOP.js",
  "readme": "#OOP.js\r\n\r\nA set of methods that help with object orientated programming in javascript.\r\n\r\n**Note**: All credit goes to the coffescript homepage from where the code originated (http://coffeescript.org/#classes).\r\n\r\n##Installation\r\n\r\n\tnpm install OOP.js\r\n\r\n##Usage - extends.\r\n\r\nAssuming your classes are laid out in the following way....\r\n\r\n\t\r\n\t```js\r\n\r\n\tvar Dog;\r\n\r\n\tDog = (function() {\r\n\r\n\t\tfunction Dog()\r\n\t\t{\r\n\r\n\t\t};\r\n\r\n\t\treturn Dog;\r\n\r\n\t})();\r\n\r\n\t```\r\n\r\nImport oop to use inheritance and pass the parent class variable to the wrapper function.\r\n\r\n\t```js\r\n\r\n\tvar OOP = require('oop'),\r\n\t\tAnimal = require('animal');\r\n\r\n\tvar Dog;\r\n\r\n\tDog = (function(_super) {\r\n\r\n\t\tOOP.__extends(Dog, _super);\r\n\r\n\t\tfunction Dog()\r\n\t\t{\r\n\r\n\t\t};\r\n\r\n\t\treturn Dog;\r\n\r\n\t})(animal);\r\n\r\n\t```\r\n\r\n##License\r\n\r\n\tSee \"LICENSE\" file.",
  "readmeFilename": "README.md",
  "gitHead": "578c3d536d4cdccb1e9dd58edaa582a6256030a5",
  "_id": "ws-oop.js@1.0.0",
  "_shasum": "0160c6fa192e685a0b3adcbbfda6557bfa754d37",
  "_from": "ws-oop.js@"
}
